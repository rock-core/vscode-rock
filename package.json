{
    "name": "rock",
    "displayName": "rock",
    "description": "Base support for Rock workspaces",
    "version": "0.5.0",
    "publisher": "rock-robotics",
    "license": "SEE LICENSE IN LICENSE.txt",
    "icon": "images/icon.png",
    "author": {
        "name": "Rock Robotics"
    },
    "contributors": [
        {
            "name": "Gabriel Arjones",
            "email": "arjones@arjones.com"
        },
        {
            "name": "Sylvain Joyeux",
            "email": "sylvain.joyeux@m4x.org"
        }
    ],
    "galleryBanner": {
        "color": "#458ccc",
        "theme": "dark"
    },
    "repository": {
        "type": "git",
        "url": "https://github.com/rock-core/vscode-rock.git"
    },
    "engines": {
        "vscode": "^1.30.0"
    },
    "activationEvents": [
        "*"
    ],
    "main": "./out/src/extension",
    "categories": [
        "Other"
    ],
    "keywords": [
        "rock",
        "robotics",
        "autoproj",
        "syskit",
        "roby"
    ],
    "contributes": {
        "configuration": {
            "type": "object",
            "title": "Rock Workspace Configuration",
            "properties": {
                "rock.devFolder": {
                    "type": "string",
                    "default": null,
                    "description": "Toplevel path in which your workspaces are stored, to speed up selection in the Add Workspace command"
                },
                "rock.applyRubySettings": {
                    "type": "boolean",
                    "default": true,
                    "description": "Whether the recommended Ruby settings should be set on new workspaces"
                },
                "rock.applyCPPSettings": {
                    "type": "boolean",
                    "default": true,
                    "description": "Whether the recommended C++ settings should be set on new workspaces"
                }
            }
        },
        "debuggers": [
            {
                "type": "orogen",
                "label": "Orogen",
                "enableBreakpointsFor": {
                    "languageIds": [
                        "c",
                        "cpp"
                    ]
                },
                "configurationAttributes": {
                    "launch": {
                        "required": [
                            "deploy"
                        ],
                        "properties": {
                            "deploy": {
                                "type": "string",
                                "description": "Name of the task model or deployment to debug."
                            },
                            "deployAs": {
                                "type": "string",
                                "description": "Name to be used as the deployment name for task models, and as prefix for deployments."
                            },
                            "cwd": {
                                "type": "string",
                                "description": "Working directory"
                            },
                            "stopAtEntry": {
                                "type": "boolean",
                                "description": "Whether GDB should break when entering the program"
                            },
                            "externalConsole": {
                                "type": "boolean",
                                "description": "Whether the program should get its own console or be redirected to the main debug console"
                            },
                            "environment": {
                                "type": "array",
                                "description": "Environment variables that should be set as { \"name\": \"name_of_var\", \"value\": \"value_of_var\" }"
                            },
                            "MIMode": {
                                "type": "string",
                                "description": "Debugger mode"
                            },
                            "start": {
                                "type": "boolean",
                                "description": "Start task on launch.",
                                "default": false
                            },
                            "confDir": {
                                "type": "string",
                                "description": "Directory to launch task configuration from."
                            }
                        }
                    }
                }
            }
        ],
        "commands": [
            {
                "title": "Update package info",
                "category": "Rock",
                "command": "rock.updatePackageInfo"
            },
            {
                "title": "Add launch config",
                "category": "Rock",
                "command": "rock.addLaunchConfig"
            },
            {
                "title": "Add workspace",
                "category": "Rock",
                "command": "rock.addWorkspace"
            },
            {
                "title": "Add package to workspace",
                "category": "Rock",
                "command": "rock.addPackageToWorkspace"
            },
            {
                "title": "Update VS Code configuration",
                "category": "Rock",
                "command": "rock.applyDefaultSettings"
            },
            {
                "title": "Apply Recommended Editor Settings",
                "category": "Rock",
                "command": "rock.applyEditorSettings"
            },
            {
                "title": "Apply Recommended C++ Settings",
                "category": "Rock",
                "command": "rock.applyCPPSettings"
            },
            {
                "title": "Apply Recommended Ruby Settings",
                "category": "Rock",
                "command": "rock.applyRubySettings"
            },
            {
                "title": "Show Output",
                "category": "Rock",
                "command": "rock.showOutputChannel"
            }
        ],
        "languages": [
            {
                "id": "ruby",
                "extensions": [
                    ".orogen",
                    ".autobuild"
                ]
            },
            {
                "id": "yaml",
                "extensions": [
                    ".osdeps"
                ],
                "filenames": [
                    "manifest"
                ]
            }
        ],
        "problemMatchers": [
            {
                "name": "autoproj",
                "owner": "autoproj",
                "fileLocation": [
                    "absolute"
                ],
                "pattern": [
                    {
                        "regexp": "^\\(\\d+\\) .+\\(([^\\)]+)\\): (failed in .* phase)$",
                        "kind": "file",
                        "file": 1,
                        "message": 2
                    },
                    {
                        "regexp": "^    (.*)",
                        "message": 1,
                        "loop": true
                    }
                ]
            },
            {
                "name": "autoproj-cmake-configure-error",
                "owner": "autoproj",
                "fileLocation": [
                    "absolute"
                ],
                "pattern": [
                    {
                        "regexp": "(?:Autobuild::CMake|Autobuild::Orogen):(?:[^:]+):(?:configure|build): (?:.+\n)?CMake Error at ([\\/0-9a-zA-Z\\._-]+):(\\d+).*",
                        "file": 1,
                        "line": 2,
                        "message": -1
                    },
                    {
                        "regexp": "(?:Autobuild::CMake|Autobuild::Orogen):(?:[^:]+):(?:configure|build): (?!Call Stack)(.*)",
                        "message": 1,
                        "loop": true
                    }
                ]
            },
            {
                "name": "autoproj-cmake-configure-warning",
                "owner": "autoproj",
                "fileLocation": [
                    "absolute"
                ],
                "pattern": [
                    {
                        "regexp": "(?:Autobuild::CMake|Autobuild::Orogen):(?:[^:]+):(?:configure|build): (?:.+\n)?CMake Warning at ([\\/0-9a-zA-Z\\._-]+):(\\d+).*",
                        "file": 1,
                        "line": 2,
                        "message": -1
                    },
                    {
                        "regexp": "(?:Autobuild::CMake|Autobuild::Orogen):(?:[^:]+):(?:configure|build): (?!Call Stack)(.*)",
                        "message": 1,
                        "loop": true
                    }
                ]
            },
            {
                "name": "autoproj-orogen-error",
                "owner": "autoproj",
                "fileLocation": [
                    "absolute"
                ],
                "severity": "error",
                "pattern": {
                    "regexp": "Autobuild::Orogen:(?:[^:]+):orogen: (.+):(\\d+):\\s+(.+)",
                    "file": 1,
                    "line": 2,
                    "message": 3
                }
            },
            {
                "name": "autoproj-gcc-compile-error",
                "owner": "autoproj",
                "fileLocation": [
                    "absolute"
                ],
                "pattern": {
                    "regexp": "(?:Autobuild::CMake|Autobuild::Orogen):(?:[^:]+):build: (.+):(\\d+):(\\d+):\\s+(?:fatal\\s+)?(error):\\s+(.+)",
                    "file": 1,
                    "line": 2,
                    "column": 3,
                    "severity": 4,
                    "message": 5
                }
            },
            {
                "name": "autoproj-gcc-compile-template-expansion",
                "severity": "error",
                "owner": "autoproj",
                "fileLocation": [
                    "absolute"
                ],
                "pattern": {
                    "regexp": "(?:Autobuild::CMake|Autobuild::Orogen):(?:[^:]+):build: (.+):(\\d+):(\\d+):\\s+(required from .+)",
                    "file": 1,
                    "line": 2,
                    "column": 3,
                    "message": 4
                }
            },
            {
                "name": "autoproj-gcc-compile-file-inclusion",
                "severity": "error",
                "owner": "autoproj",
                "fileLocation": [
                    "absolute"
                ],
                "pattern": {
                    "regexp": "(?:Autobuild::CMake|Autobuild::Orogen):(?:[^:]+):build: (In file included from (.+):(\\d+):(\\d+))",
                    "file": 2,
                    "line": 3,
                    "column": 4,
                    "message": 1
                }
            },
            {
                "name": "autoproj-gcc-compile-warning",
                "owner": "autoproj",
                "fileLocation": [
                    "absolute"
                ],
                "pattern": {
                    "regexp": "(?:Autobuild::CMake|Autobuild::Orogen):(?:[^:]+):build: (?:.+:\\d+:\\d+:\n)?(.+):(\\d+):(\\d+):\\s+(?:.*\\s+)?(warning):\\s+(.+)",
                    "file": 1,
                    "line": 2,
                    "column": 3,
                    "severity": 4,
                    "message": 5
                }
            }
        ],
        "taskDefinitions": [
            {
                "type": "autoproj-package",
                "required": [
                    "workspace",
                    "mode",
                    "path"
                ],
                "properties": {
                    "workspace": {
                        "type": "string",
                        "description": "The workspace root"
                    },
                    "path": {
                        "type": "string",
                        "description": "The package path"
                    },
                    "mode": {
                        "type": "string",
                        "enum": [
                            "update",
                            "checkout",
                            "build",
                            "build-no-deps",
                            "force-build"
                        ],
                        "description": "The operation mode"
                    }
                }
            },
            {
                "type": "autoproj-workspace",
                "required": [
                    "workspace",
                    "mode"
                ],
                "properties": {
                    "workspace": {
                        "type": "string",
                        "description": "The workspace root"
                    },
                    "mode": {
                        "type": "string",
                        "enum": [
                            "osdeps",
                            "watch",
                            "update-config",
                            "update",
                            "checkout"
                        ],
                        "description": "The operation mode"
                    }
                }
            }
        ]
    },
    "scripts": {
        "vscode:prepublish": "npm run compile",
        "compile": "tsc -p ./",
        "watch": "tsc -watch -p ./",
        "postinstall": "node ./node_modules/vscode/bin/install",
        "test": "npm run compile && node ./node_modules/vscode/bin/test"
    },
    "extensionDependencies": [
        "ms-vscode.cpptools",
        "rebornix.ruby"
    ],
    "dependencies": {
        "fs-temp": "latest",
        "js-yaml": "latest",
        "jsonc-parser": "latest",
        "request": "latest",
        "request-promise-native": "latest"
    },
    "devDependencies": {
        "@types/js-yaml": "^3.12.0",
        "@types/node": "^7.10.3",
        "@types/should": "latest",
        "decache": "^4.5.1",
        "del": "^3.0.0",
        "gulp": "latest",
        "gulp-json-editor": "latest",
        "run-sequence": "^2.2.1",
        "should": "latest",
        "typemoq": "latest",
        "typescript": "latest",
        "vscode": "^1.1.30"
    }
}
