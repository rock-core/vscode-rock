{
	// Place your snippets for cpp here. Each snippet is defined under a snippet name and has a prefix, body and
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with th-rc1e
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
    // }

    "rock: standard hpp file": {
        "prefix": "rockhpp",
        "body": [
            "#ifndef ${TM_DIRECTORY/.*\\/(.*)\\/src/${1:/upcase}/}_${TM_FILENAME_BASE/^(.*)$/${1:/upcase}/}_HPP",
            "#define ${TM_DIRECTORY/.*\\/(.*)\\/src/${1:/upcase}/}_${TM_FILENAME_BASE/^(.*)$/${1:/upcase}/}_HPP",
            "",
            "namespace ${TM_DIRECTORY/.*\\/(.*)\\/src/${1}/} {",
            "    /**",
            "     *",
            "     */",
            "    class ${TM_FILENAME_BASE/.*\\/(.*)/${1}/} {",
            "    };",
            "}",
            "",
            "#endif"
        ],
        "description": "Initialize a header to match Rock conventions"
    },

    "rock: standard cpp file": {
        "prefix": "rockcpp",
        "body": [
            "#include <${TM_DIRECTORY/.*\\/(.*)\\/src/${1}/}/${TM_FILENAME_BASE/.*\\/(.*)/${1}/}.hpp>",
            "",
            "using namespace ${TM_DIRECTORY/.*\\/(.*)\\/src/${1}/};",
            ""
        ],
        "description": "Initialize a source file to match Rock conventions"
    },

    "rock: initialize GTest file": {
        "prefix": "rockgtestfile",
        "body": [
            "#include <gtest/gtest.h>",
            "#include <${TM_DIRECTORY/.*\\/(.*)\\/test/${1}/}/${TM_FILENAME_BASE/test_(.*)/${1}/}.hpp>",
            "",
            "using namespace ${TM_DIRECTORY/.*\\/(.*)\\/test/${1}/};",
            "",
            "struct ${TM_FILENAME_BASE/test_(.*)/${1}/}Test : public ::testing::Test {",
            "};",
            "",
            "TEST_F(${TM_FILENAME_BASE/test_(.*)/${1}/}Test, $1) {",
            "}"
        ],
        "description": "Create a GTest-based test file"
    },

    "rock: add GTest test case": {
        "prefix": "rockgtest",
        "body": [
            "TEST_F(${TM_FILENAME_BASE/test_(.*)/${1}/}Test, $1) {",
            "}"
        ],
        "description": "Add a new test case to this GTest-based file"
    }
}
